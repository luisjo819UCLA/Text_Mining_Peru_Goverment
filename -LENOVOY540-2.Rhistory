knitr::opts_chunk$set(
echo=FALSE,
warning=FALSE,
message=FALSE)
# Chunk 2
library(pdftools)
library(tidyverse)
library(tidytext)
library(GGally)
library(ggthemes)
library(widyr)
library(igraph)
library(wordcloud)
library(wordcloud2)
library(RColorBrewer)
library(scales)
library(ggraph)
library(tidygraph)
library(reshape2)
# Chunk 3
rm(list=ls())
#Primero llamo a los planes de gobierno en PDF
Fuerza_Popular    = pdf_data("Data/Fuerza_popular.PDF")
Partido_Morado    = pdf_data("Data/Partido_morado.PDF")
Accion_Popular    = pdf_data("Data/Accion_popular(peor_partido).PDF")
JP                = pdf_data("Data/Juntos_por_Peru(JP).PDF")
Podemos        = pdf_data("Data/Podemos.PDF")
Victoria_Nacional = pdf_data("Data/Victoria_nacional.PDF")
#Luego los trato de agrupar
z     = tibble() #Base de datos vacia
cosas = objects()  #los nombres de todas las variables en el environment
#Ahora, sumaré todos los planes de gobierno (y sus hojas) en una sola base de
#datos
for (i in cosas[cosas!="z"]){
x = get(i)
for(j in 1:length(x)){
if(j==1){
z1 = tibble(x[[j]]["text"],Hoja = j,Partido = i)
z = bind_rows(z,z1)
}else{
z = x[[j]]["text"] %>%
tibble(Hoja = j,Partido=i) %>%
{bind_rows(z,.)}
}
}
}
#Elimino todas las variables que no sean "z"
rm(list=setdiff(ls(),"z"))
#El procesamiento####
#Primero convoco a las stop_words (palabras inútiles)
stop_words = read.table("Stopwords.txt",encoding = "UTF-8") %>%
rename("word" = V1) %>%
mutate(word = as.character(word)) %>%
add_row(word=c("año","partido","morado","indicadores","metas","mil","sector","instituciones","dimensión","meta","nivel")) %>% #Añades palabras inutiles según el contexto (y los resultados)
as_tibble()
#Proceso el acumulado de planes de gobierno
tidy_detalle = z %>%
unnest_tokens(word,text) %>% #Función unnest, cada palabra es una observación (sin signos)
anti_join(stop_words) %>% #Elimino stop words
filter(grepl("^[A-Za-z]+$",word)) #Solo palabras (sin numeros ni signos)
tidy_lineas = z %>%
group_by(Partido) %>%
summarise(text = paste(text,collapse = " ")) %>%
unnest_tokens(output = word,token = "regex",text,pattern = "(?<=\\.)\\s+")
# Sentimientos
sentiment  = readxl::read_excel("dictionary.xlsx") %>%
rename("word" = "term") %>%
filter(word!="mil" & word!="popular" & word!="victoria")
palabras_sentimiento = tidy_detalle %>%
inner_join(sentiment) %>%
mutate(score = ifelse(score_pos=="1","Positivo","Negativo")) %>%
count(word,score,sort=TRUE)
partido_sentimiento = tidy_detalle %>%
inner_join(sentiment) %>%
mutate(score = ifelse(score_pos=="1","Positivo","Negativo")) %>%
count(word,Partido,score,sort=TRUE)
#Bigramas
omision2 = tibble(bigram = c("partido morado","fuerza popular",
"victoria nacional","acción popular",
"sua ama","llulla ama",
"morado propone","ingreso 15",
"expuesto proponemos",
"sentido proponemos",
"indicadores porcentaje","objetivos indicadores","pbi 1.1","pilar estratégico",
"20 mil","mil soles","mil habitantes","indicadores número",
"identificados objetivos","problemas identificados","metas 2021",
"lineamientos generales","indicadores metas","problema indicadores",
"metas contar","situación actual","físico legal","alto corresponde","porcentual anual","política política"))
# Chunk 4
tidy_detalle %>%
count(word,sort = TRUE) %>%
wordcloud2(size=0.8,fontWeight = "bold",color="random-dark",minSize = "Hola todos",
maxRotation = pi/9,minRotation = -pi/9)
# Chunk 5
tidy_detalle %>%
count(word,sort=TRUE) %>%
top_n(10,n)
# Chunk 6
palabras_sentimiento  %>%
select(word,score,n) %>%
acast(word ~ score, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("darkred", "darkblue"),random.order = FALSE,
max.words = 400,scale=c(4,.1),title.size = 2.5)
# Chunk 7
tidy_detalle %>%
count(Partido,word,sort = TRUE) %>%
select(word,Partido,n) %>%
group_by(Partido) %>%
mutate(n = (n^(1.5))/sum(n)) %>%
filter(n > 0.0008) %>%
ungroup() %>%
acast(word ~ Partido, value.var = "n", fill = 0) %>%
comparison.cloud(random.order = FALSE,title.size=1.1,colors = c("black", "darkorange","red","#6600CC","deeppink2","seagreen4"),
max.words = 600,scale = c(4,.5))
#El top 3 por partido
#Proceso la data para graficarla
p = tidy_detalle%>%
group_by(Partido) %>% #Agrupo por partido
count(word, sort = TRUE)  %>%  #Cuento las palabras
top_n(15,n) %>% #Me quedo con el top 15
mutate(word = reorder(str_to_title(word), n)) %>% #Le pongo mayuscula al inicio
ungroup() %>%
arrange(Partido,n) %>% #Ordeno por partido y numero
mutate(order = row_number()) %>%
mutate(color = ifelse(word=="Salud","red","black"))
#El orden (para el gráfico)
#grafico con GGPLOT
p %>%
ggplot(aes(order, n,fill=-n)) +
geom_col() +
xlab(NULL) +
coord_flip() +
facet_wrap(~Partido,scales = "free") +
scale_x_continuous(
breaks = p$order,
labels = p$word,
expand=c(0,0)
) +
labs(y="Numero de veces que se repite la palabra") +
theme(strip.text.x = element_text(size = 12, face ="bold",color=p$color),
axis.text.y = element_text()) +
scale_color_gradient(low="blue", high="red")
theme(strip.text.x = element_text() +
#grafico con GGPLOT
p %>%
ggplot(aes(order, n,fill=-n)) +
geom_col() +
xlab(NULL) +
coord_flip() +
facet_wrap(~Partido,scales = "free") +
scale_x_continuous(
breaks = p$order,
labels = p$word,
expand=c(0,0)
) +
labs(y="Numero de veces que se repite la palabra") +
theme(strip.text.x = element_text()) +
scale_color_gradient(low="blue", high="red")
#grafico con GGPLOT
p %>%
ggplot(aes(order, n,fill=-n)) +
geom_col() +
xlab(NULL) +
coord_flip() +
facet_wrap(~Partido,scales = "free") +
scale_x_continuous(
breaks = p$order,
labels = p$word,
expand=c(0,0)
) +
labs(y="Numero de veces que se repite la palabra") +
theme(strip.text.x = element_text()) +
scale_fill_gradient(low="blue", high="red")
#grafico con GGPLOT
p %>%
ggplot(aes(order, n,color=-n)) +
geom_col() +
xlab(NULL) +
coord_flip() +
facet_wrap(~Partido,scales = "free") +
scale_x_continuous(
breaks = p$order,
labels = p$word,
expand=c(0,0)
) +
labs(y="Numero de veces que se repite la palabra") +
theme(strip.text.x = element_text()) +
scale_color_gradient(low="blue", high="red")
#grafico con GGPLOT
p %>%
ggplot(aes(order, n,color=n)) +
geom_col() +
xlab(NULL) +
coord_flip() +
facet_wrap(~Partido,scales = "free") +
scale_x_continuous(
breaks = p$order,
labels = p$word,
expand=c(0,0)
) +
labs(y="Numero de veces que se repite la palabra") +
theme(strip.text.x = element_text()) +
scale_color_gradient(low="blue", high="red")
#grafico con GGPLOT
p %>%
ggplot(aes(order, n,fill=-n)) +
geom_col() +
xlab(NULL) +
coord_flip() +
facet_wrap(~Partido,scales = "free") +
scale_x_continuous(
breaks = p$order,
labels = p$word,
expand=c(0,0)
) +
labs(y="Numero de veces que se repite la palabra") +
theme(strip.text.x = element_text()) +
scale_fill_gradient(low="blue", high="red")
#grafico con GGPLOT
p %>%
ggplot(aes(order, n,fill=n)) +
geom_col() +
xlab(NULL) +
coord_flip() +
facet_wrap(~Partido,scales = "free") +
scale_x_continuous(
breaks = p$order,
labels = p$word,
expand=c(0,0)
) +
labs(y="Numero de veces que se repite la palabra") +
theme(strip.text.x = element_text()) +
scale_fill_gradient(low="blue", high="red")
#grafico con GGPLOT
p %>%
ggplot(aes(order, n,fill=n)) +
geom_col() +
xlab(NULL) +
coord_flip() +
facet_wrap(~Partido,scales = "free") +
scale_x_continuous(
breaks = p$order,
labels = p$word,
expand=c(0,0)
) +
labs(y="Numero de veces que se repite la palabra") +
theme(strip.text.x = element_text()) +
scale_fill_gradient(low="blue", high="darkblue")
#grafico con GGPLOT
p %>%
ggplot(aes(order, n,fill=n)) +
geom_col() +
xlab(NULL) +
coord_flip() +
facet_wrap(~Partido,scales = "free") +
scale_x_continuous(
breaks = p$order,
labels = p$word,
expand=c(0,0)
) +
labs(y="Numero de veces que se repite la palabra") +
theme(strip.text.x = element_text()) +
scale_fill_gradient(low="darkred", high="darkblue")
#grafico con GGPLOT
p %>%
ggplot(aes(order, n,fill=n)) +
geom_col() +
xlab(NULL) +
coord_flip() +
facet_wrap(~Partido,scales = "free") +
scale_x_continuous(
breaks = p$order,
labels = p$word,
expand=c(0,0)
) +
labs(y="Numero de veces que se repite la palabra") +
theme(strip.text.x = element_text()) +
scale_fill_gradient(low="darkblue", high="darkred")
#grafico con GGPLOT
p %>%
ggplot(aes(order, n,fill=n)) +
geom_col() +
xlab(NULL) +
coord_flip() +
facet_wrap(~Partido,scales = "free") +
scale_x_continuous(
breaks = p$order,
labels = p$word,
expand=c(0,0)
) +
labs(y="Numero de veces que se repite la palabra") +
theme(strip.text.x = element_text()) +
scale_fill_gradient(low="darkblue", high="red")
#grafico con GGPLOT
p %>%
ggplot(aes(order, n,fill=n)) +
geom_col() +
xlab(NULL) +
coord_flip() +
facet_wrap(~Partido,scales = "free") +
scale_x_continuous(
breaks = p$order,
labels = p$word,
expand=c(0,0)
) +
labs(y="Numero de veces que se repite la palabra") +
theme(strip.text.x = element_text(),
axis.text.y = element_text(face="bold")) +
scale_fill_gradient(low="darkblue", high="red")
#Proceso la data para graficarla
p = tidy_detalle%>%
group_by(Partido) %>% #Agrupo por partido
count(word, sort = TRUE)  %>%  #Cuento las palabras
mutate(n = n*100/n()) %>%
top_n(15,n) %>% #Me quedo con el top 15
mutate(word = reorder(str_to_title(word), n)) %>% #Le pongo mayuscula al inicio
ungroup() %>%
arrange(Partido,n) %>% #Ordeno por partido y numero
mutate(order = row_number()) %>%
mutate(color = ifelse(word=="Salud","red","black"))
#grafico con GGPLOT
p %>%
ggplot(aes(order, n,fill=n)) +
geom_col() +
xlab(NULL) +
coord_flip() +
facet_wrap(~Partido,scales = "free") +
scale_x_continuous(
breaks = p$order,
labels = p$word,
expand=c(0,0)
) +
labs(y="Numero de veces que se repite la palabra") +
theme(strip.text.x = element_text(),
axis.text.y = element_text(face="bold")) +
scale_fill_gradient(low="darkblue", high="red")
View(p)
tidy_detalle%>%
group_by(Partido) %>% #Agrupo por partido
count(word, sort = TRUE)  %>%  #Cuento las palabras
mutate(n = n*100/n()) %>%
top_n(15,n)
tidy_detalle%>%
group_by(Partido) %>% #Agrupo por partido
count(word, sort = TRUE)  %>%  #Cuento las palabras
mutate(n = n*100/n())
tidy_detalle%>%
group_by(Partido) %>% #Agrupo por partido
count(word, sort = TRUE)  %>%  #Cuento las palabras
mutate(n = n*100/sum(n))
tidy_detalle%>%
group_by(Partido) %>% #Agrupo por partido
count(word, sort = TRUE)
#Proceso la data para graficarla
p = tidy_detalle%>%
group_by(Partido) %>% #Agrupo por partido
count(word, sort = TRUE)  %>%  #Cuento las palabras
mutate(n = n*100/sum(n)) %>%
top_n(15,n) %>% #Me quedo con el top 15
mutate(word = reorder(str_to_title(word), n)) %>% #Le pongo mayuscula al inicio
ungroup() %>%
arrange(Partido,n) %>% #Ordeno por partido y numero
mutate(order = row_number()) %>%
mutate(color = ifelse(word=="Salud","red","black"))
#grafico con GGPLOT
p %>%
ggplot(aes(order, n,fill=n)) +
geom_col() +
xlab(NULL) +
coord_flip() +
facet_wrap(~Partido,scales = "free") +
scale_x_continuous(
breaks = p$order,
labels = p$word,
expand=c(0,0)
) +
labs(y="Numero de veces que se repite la palabra") +
theme(strip.text.x = element_text(),
axis.text.y = element_text(face="bold")) +
scale_fill_gradient(low="darkblue", high="red")
#Proceso la data para graficarla
p = tidy_detalle%>%
filter(word!="Nacional") %>%
group_by(Partido) %>% #Agrupo por partido
count(word, sort = TRUE)  %>%  #Cuento las palabras
mutate(n = n*100/sum(n)) %>%
top_n(15,n) %>% #Me quedo con el top 15
mutate(word = reorder(str_to_title(word), n)) %>% #Le pongo mayuscula al inicio
ungroup() %>%
arrange(Partido,n) %>% #Ordeno por partido y numero
mutate(order = row_number()) %>%
mutate(color = ifelse(word=="Salud","red","black"))
#grafico con GGPLOT
p %>%
ggplot(aes(order, n,fill=n)) +
geom_col() +
xlab(NULL) +
coord_flip() +
facet_wrap(~Partido,scales = "free") +
scale_x_continuous(
breaks = p$order,
labels = p$word,
expand=c(0,0)
) +
labs(y="Numero de veces que se repite la palabra") +
theme(strip.text.x = element_text(),
axis.text.y = element_text(face="bold")) +
scale_fill_gradient(low="darkblue", high="red")
#Proceso la data para graficarla
p = tidy_detalle%>%
filter(word!="nacional") %>%
group_by(Partido) %>% #Agrupo por partido
count(word, sort = TRUE)  %>%  #Cuento las palabras
mutate(n = n*100/sum(n)) %>%
top_n(15,n) %>% #Me quedo con el top 15
mutate(word = reorder(str_to_title(word), n)) %>% #Le pongo mayuscula al inicio
ungroup() %>%
arrange(Partido,n) %>% #Ordeno por partido y numero
mutate(order = row_number()) %>%
mutate(color = ifelse(word=="Salud","red","black"))
#Proceso la data para graficarla
p = tidy_detalle%>%
filter(word!="nacional") %>%
group_by(Partido) %>% #Agrupo por partido
count(word, sort = TRUE)  %>%  #Cuento las palabras
mutate(n = n*100/sum(n)) %>%
top_n(15,n) %>% #Me quedo con el top 15
mutate(word = reorder(str_to_title(word), n)) %>% #Le pongo mayuscula al inicio
ungroup() %>%
arrange(Partido,n) %>% #Ordeno por partido y numero
mutate(order = row_number()) %>%
mutate(color = ifelse(word=="Salud","red","black"))
#grafico con GGPLOT
p %>%
ggplot(aes(order, n,fill=n)) +
geom_col() +
xlab(NULL) +
coord_flip() +
facet_wrap(~Partido,scales = "free") +
scale_x_continuous(
breaks = p$order,
labels = p$word,
expand=c(0,0)
) +
labs(y="Numero de veces que se repite la palabra") +
theme(strip.text.x = element_text(),
axis.text.y = element_text(face="bold")) +
scale_fill_gradient(low="darkblue", high="red")
#Proceso la data para graficarla
p = tidy_detalle%>%
filter(word!="nacional" | word!="sistema") %>%
group_by(Partido) %>% #Agrupo por partido
count(word, sort = TRUE)  %>%  #Cuento las palabras
mutate(n = n*100/sum(n)) %>%
top_n(15,n) %>% #Me quedo con el top 15
mutate(word = reorder(str_to_title(word), n)) %>% #Le pongo mayuscula al inicio
ungroup() %>%
arrange(Partido,n) %>% #Ordeno por partido y numero
mutate(order = row_number()) %>%
mutate(color = ifelse(word=="Salud","red","black"))
#grafico con GGPLOT
p %>%
ggplot(aes(order, n,fill=n)) +
geom_col() +
xlab(NULL) +
coord_flip() +
facet_wrap(~Partido,scales = "free") +
scale_x_continuous(
breaks = p$order,
labels = p$word,
expand=c(0,0)
) +
labs(y="Numero de veces que se repite la palabra") +
theme(strip.text.x = element_text(),
axis.text.y = element_text(face="bold")) +
scale_fill_gradient(low="darkblue", high="red")
#Proceso la data para graficarla
p = tidy_detalle%>%
filter(word!="nacional" & word!="sistema") %>%
group_by(Partido) %>% #Agrupo por partido
count(word, sort = TRUE)  %>%  #Cuento las palabras
mutate(n = n*100/sum(n)) %>%
top_n(15,n) %>% #Me quedo con el top 15
mutate(word = reorder(str_to_title(word), n)) %>% #Le pongo mayuscula al inicio
ungroup() %>%
arrange(Partido,n) %>% #Ordeno por partido y numero
mutate(order = row_number()) %>%
mutate(color = ifelse(word=="Salud","red","black"))
#grafico con GGPLOT
p %>%
ggplot(aes(order, n,fill=n)) +
geom_col() +
xlab(NULL) +
coord_flip() +
facet_wrap(~Partido,scales = "free") +
scale_x_continuous(
breaks = p$order,
labels = p$word,
expand=c(0,0)
) +
labs(y="Numero de veces que se repite la palabra") +
theme(strip.text.x = element_text(),
axis.text.y = element_text(face="bold")) +
scale_fill_gradient(low="darkblue", high="red")
#El procesamiento####
#Primero convoco a las stop_words (palabras inútiles)
stop_words = read.table("Stopwords.txt",encoding = "UTF-8") %>%
rename("word" = V1) %>%
mutate(word = as.character(word)) %>%
add_row(word=c("año","partido","morado","indicadores","metas","mil","sector","instituciones","dimensión","meta","nivel","nacional","sistema","gobierno","servicios")) %>% #Añades palabras inutiles según el contexto (y los resultados)
as_tibble()
rm(list=ls())
